#brute approach
def findMissingRepeatingNumbers(arr):
    n= len(arr)
    repeating,missing = -1,-1
    
    for i in range(1,n+1):
        count = 0
        for j in range(n):
            if arr[j] == i:
                count+=1
        if count==2:
            repeating = i
        elif count == 0:
            missing = i
            
        elif repeating !=-1 and missing!=-1:
            break
        
    return [repeating,missing]             

if __name__ == '__main__':
    a = [3,1, 2, 5, 4, 6, 7,5]
    ans = findMissingRepeatingNumbers(a)
    print("The repeating and missing numbers are: {", ans[0], ", ", ans[1], "}\n")

#better approach
def findMissingRepeatingNumbers(a):
    n = len(a)
    hash = [0]*(n+1)
    
    for i in range(n):
        hash[a[i]]+=1
        
    repeating,missing = -1,-1
    
    for i in range(1,n+1):
        if hash[i]==2:
            repeating = i 
            
        elif hash[i]==0:
            missing = i
        
        if repeating !=-1 and missing !=-1:
            break
        
    return [repeating,missing]                            

if __name__ == '__main__':
    a = [3, 1, 2, 5, 4, 6, 7, 5]
    ans = findMissingRepeatingNumbers(a)
    print("The repeating and missing numbers are: {", ans[0], ", ", ans[1], "}\n")



