#brute approach
def totalFruits(arr):
        n = len(arr)
        maxlen = 0
        
        for i in range(n):
            st = set()
            for j in range(i,n):
                st.add(arr[j])
                
                if len(st)<=2:
                    maxlen = max(maxlen,j-i+1)
                else:
                    break
                
        return maxlen
    
arr = [3,3,3,3,2,2,2,1,3,1,3]

result = totalFruits(arr)
print(result)    

#two pointer 
def totalFruits(arr):
    n = len(arr)
    l = 0
    r = 0
    maxlen = 0
    st = set()
    
    for r in range(l,n):
        st.add(arr[r])
        
        if len(st)<=2:
            maxlen = max(maxlen,r-l+1)
        else:
            while len(st) > 2:
                st.remove(arr[l])
                l += 1
                st = set(arr[l:r + 1])

    return maxlen        
         
arr = [3,3,3,3,1,2,2,2,1,3,1,3]

result = totalFruits(arr)
print(result)

#sliding window

def totalFruits(arr):
    n = len(arr)
    l = 0
    r = 0
    maxlen = 0
    st = set()
    
    while r<n:    
        st.add(arr[r])
        
        if len(st) <=2:
            maxlen = max(maxlen,r-l+1)
        else:
            while len(st) > 2:
                st.remove(arr[l])
                l+=1
                st = set(arr[l:r+1])
        r+=1   
                
    return maxlen                           
                
        
arr = [3,3,3,3,1,2,2,2,1,3,1,3]

result = totalFruits(arr)
print(result)
