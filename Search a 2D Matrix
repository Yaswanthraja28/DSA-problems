class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                if matrix[i][j]==target:
                    return True

        return False

def twodmatrix(matrix,target):
    n = len(matrix)
    low = 0
    high = n-1
    
    while low<=high:
        mid = (low+high)//2
        
        if matrix[mid]==target:
            return True
        elif matrix[low]>matrix[]

if __name__=="__main__":
    matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]] 
    target = 11
    ch = twodmatrix(matrix,target) 
    print(ch)
    
 
 
def twodmatrix(matrix, target):
    if not matrix or not matrix[0]:
        return False
    m,n = len(matrix),len(matrix[0])
    low = 0
    high = m*n-1
    
    while low<=high:
        mid =(low+high)//2
        row,col = divmod(mid,n)
        
        mid_element = matrix[row][col]
        
        if mid_element==target:
            return True
        
        elif mid_element < target:
            low = mid+1
        else:
            high = mid-1
            
    return False

if __name__=="__main__":
    matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]] 
    target = 11
    ch = twodmatrix(matrix,target) 
    print(ch)
