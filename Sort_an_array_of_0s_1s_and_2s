"""
Problem Statement: Given an array consisting of only 0s, 1s, and 2s. Write a program to in-place sort the array without using inbuilt sort functions. 
( Expected: Single pass-O(N) and constant space)

"""

#bruteforce approach
def sortedArr(arr):
    count0 = 0
    count1 = 0 
    count2 = 0
    
    for num in arr:
        if num==0:
            count0+=1
        elif num==1:
            count1+=1
        else:
            count2+=1
            
    for i in range(count0):
        arr[i] = 0
        
    for i in range(count0,count0+count1):
        arr[i] = 1
        
    for i in range(count0+count1,len(arr)):
        arr[i] = 2
        
arr = [1, 0, 2, 0, 1, 2, 0, 0, 2, 1]
n = len(arr)
sortedArr(arr)
print("After sorting: ", end="")
for num in arr:
    print(num, end=" ")
print()

#optimal approach
def arraysort(arr):
    low = 0 
    mid = 0
    high = len(arr)-1
    
    while mid<=high:
        if arr[mid]==0:
            arr[low],arr[mid]=arr[mid],arr[low]
            low +=1
            mid +=1
        elif arr[mid]==1:
            mid+=1
        else:
            arr[mid],arr[high] = arr[high],arr[mid]  
            high-=1      
            
arr = [0,1,1,0,1,2,1,2,0,0,0]
n = len(arr)                    
arraysort(arr)
print("After sorting: ")
for num in arr:
    print(num,end=" ")
print()                  
        
